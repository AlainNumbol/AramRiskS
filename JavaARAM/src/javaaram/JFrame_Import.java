/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javaaram;

import cnx.ConnexionBase;
import cnx.ManipTable;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import jxl.read.biff.BiffException;
import moteur.Moteur;

/**
 *
 * @author AloneNumbol
 */
public class JFrame_Import extends javax.swing.JFrame {
        public int initX = 0 ;
	public int initY = 0 ;
        public ConnexionBase connect;
        public Moteur m  = new Moteur();
        public Connection cnx;
	public Statement statement;
    /**
     * Creates new form JFrame_Import
     */
    public JFrame_Import() {
        initComponents();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar = new javax.swing.JProgressBar();
        jScrollPaneE = new javax.swing.JScrollPane();
        jTableExcel = new javax.swing.JTable();
        jButton_Import1 = new javax.swing.JButton();
        jButton_Import = new javax.swing.JButton();
        jLabelTitle = new javax.swing.JLabel();
        jLabelIcon = new javax.swing.JLabel();
        jLabelAg = new javax.swing.JLabel();
        jLabelExit = new javax.swing.JLabel();
        jButtonSuivant = new javax.swing.JButton();
        jLabelNbrLigne = new javax.swing.JLabel();
        jLabelSkin = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(760, 540));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(760, 540));
        getContentPane().setLayout(null);

        jTableExcel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPaneE.setViewportView(jTableExcel);

        getContentPane().add(jScrollPaneE);
        jScrollPaneE.setBounds(0, 70, 760, 430);

        jButton_Import1.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jButton_Import1.setText("Supprimer");
        jButton_Import1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Import1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Import1);
        jButton_Import1.setBounds(20, 510, 90, 30);

        jButton_Import.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jButton_Import.setText("Import");
        jButton_Import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ImportActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Import);
        jButton_Import.setBounds(10, 35, 80, 30);

        jLabelTitle.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabelTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTitle.setText("Importation des donnÃ©es");
        getContentPane().add(jLabelTitle);
        jLabelTitle.setBounds(40, 0, 640, 30);

        jLabelIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelIcon.setMaximumSize(new java.awt.Dimension(26, 26));
        getContentPane().add(jLabelIcon);
        jLabelIcon.setBounds(0, 0, 30, 30);

        jLabelAg.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelAg.setForeground(new java.awt.Color(255, 255, 255));
        jLabelAg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelAg.setText("-");
        jLabelAg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelAgMouseClicked(evt);
            }
        });
        getContentPane().add(jLabelAg);
        jLabelAg.setBounds(690, 0, 30, 30);

        jLabelExit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelExit.setForeground(new java.awt.Color(255, 255, 255));
        jLabelExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelExit.setText("X");
        jLabelExit.setToolTipText("Exit");
        jLabelExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelExitMouseClicked(evt);
            }
        });
        getContentPane().add(jLabelExit);
        jLabelExit.setBounds(730, 0, 30, 30);

        jButtonSuivant.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jButtonSuivant.setText("Suivant>>");
        jButtonSuivant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSuivantActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSuivant);
        jButtonSuivant.setBounds(650, 505, 100, 30);

        jLabelNbrLigne.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabelNbrLigne.setForeground(new java.awt.Color(102, 102, 102));
        jLabelNbrLigne.setText("Nombre de lignes");
        getContentPane().add(jLabelNbrLigne);
        jLabelNbrLigne.setBounds(120, 510, 250, 20);

        jLabelSkin.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabelSkinMouseDragged(evt);
            }
        });
        jLabelSkin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabelSkinMousePressed(evt);
            }
        });
        getContentPane().add(jLabelSkin);
        jLabelSkin.setBounds(0, 0, 760, 540);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_ImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ImportActionPerformed
        try {
                // TODO add your handling code here:
                jScrollPaneE.setBounds(0, 70, 760, 430);
                m.table_excel(jTableExcel, this);
        } catch (    IOException | BiffException ex) {
            Logger.getLogger(JFrame_Import.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton_ImportActionPerformed

    private void jLabelSkinMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSkinMouseDragged
        // TODO add your handling code here:
        int deplacementX =  evt.getX()-initX;
        int deplacementY =  evt.getY()-initY;
        this.setLocation(this.getLocation().x+deplacementX, this.getLocation().y+deplacementY);
    }//GEN-LAST:event_jLabelSkinMouseDragged

    private void jLabelSkinMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSkinMousePressed
        // TODO add your handling code here:
        initX = evt.getX();
        initY = evt.getY();
    }//GEN-LAST:event_jLabelSkinMousePressed

    private void jLabelAgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelAgMouseClicked
        // TODO add your handling code here:
        //        this.setSize(1366, 768);
        if(this.getSize().getHeight()==540){
            this.setBounds(0, 0, 1366, 768);
            jLabelSkin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bg_FlingerTechEbpGM.png"))); // NOI18N
            jLabelSkin.setBounds(0, 0, 1366, 768);
            jLabelExit.setBounds(3336, 0, 30, 30);
            jLabelAg.setBounds(1296, 0, 30, 30);
            jScrollPaneE.setVisible(false);
            jLabelExit.setBounds(730, 0, 30, 30);
        }else if(this.getSize().getHeight()==768){
            this.setBounds(1366/4, 540/4, 760, 540);
            jLabelSkin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bg_FlingerTechEbp.png"))); // NOI18N
            jLabelSkin.setBounds(0, 0, 760, 540);
            jLabelExit.setBounds(730, 0, 30, 30);
            jLabelAg.setBounds(690, 0, 30, 30);
            jScrollPaneE.setVisible(false);
        }
    }//GEN-LAST:event_jLabelAgMouseClicked

    private void jLabelExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelExitMouseClicked
        // TODO add your handling code here:
        int res = JOptionPane.showConfirmDialog(null,"Voulez vous vraiment quitter?","FingerTechEbp",JOptionPane.YES_OPTION);
        if(res==1){
            System.out.println("NON");
        }else{
            this.dispose();
        }
    }//GEN-LAST:event_jLabelExitMouseClicked

    private void jButtonSuivantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSuivantActionPerformed
        // TODO add your handling code here:
            String nomTable = "transform" ;
            cextraction_(nomTable);
            insert_transform_(nomTable);

       
    }//GEN-LAST:event_jButtonSuivantActionPerformed

    private void calendarComboBoxDFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calendarComboBoxDFMouseClicked
        // TODO add your handling code here:
//        Date hs = calendarComboBoxDF.getDate();
//        String s = new SimpleDateFormat("dd/mm/yyyy").format(hs);
//
//        System.out.println(s);
    }//GEN-LAST:event_calendarComboBoxDFMouseClicked

    private void jButton_Import1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Import1ActionPerformed
        // TODO add your handling code here:
      int res = JOptionPane.showConfirmDialog(null, "Voulez vous vraiment suppimer?", "ARAM", JOptionPane.YES_OPTION);
        if (res == 1) {
            System.out.println("NON");
        } else {
            jTableExcel.removeColumn(jTableExcel.getColumnModel().getColumn(jTableExcel.getSelectedColumn()));
        }
    }//GEN-LAST:event_jButton_Import1ActionPerformed

    public void cextraction_(String nomTable){
        int col = jTableExcel.getColumnCount();
        int row = jTableExcel.getRowCount();
        String attribut = "";

        String type = "VARCHAR(100),";
        for(int j = 0; j<col; j++){  
            attribut = attribut + jTableExcel.getColumnName(j).replace(" ","_")+ " "+ type;
        }
   
        String sql = "CREATE TABLE  IF NOT EXISTS "+nomTable+" \n" +
                        "(\n" +
                        " \n "+attribut.substring(0, attribut.length()-1)+" \n" +
                        ");"; 
        
             //Destruction de la table 
            try {
                ManipTable mp = new ManipTable();
                mp.executU("DROP TABLE "+nomTable);

            } catch (Exception ex) {
                System.out.println("Erreur de drop box : "+ ex.toString());
            }
            
            //Creation de la table
            try {
                ManipTable mp = new ManipTable();
                mp.executU(sql);

            } catch (Exception ex) {
                System.out.println("Erreur de creation : "+ ex.toString());
            }
    
    }
    
    public void insert_transform_(String nomTable){
          int row = jTableExcel.getRowCount();
          int col = jTableExcel.getColumnCount();
          String sql ="";
          String champ = "";
          String valeur = "";


            for(int j = 0; j<col; j++){  
                champ = champ + jTableExcel.getColumnName(j).replace(" ","_")+",";
            }
            System.out.println(champ);
//            
            for(int i = 0; i<row; i++){ 
                for(int j = 0; j<col; j++){     
                    valeur = "("+valeur + "'"+jTableExcel.getValueAt(i, j)+"',";
                  }
                valeur = valeur + "),";
            }
           System.out.println(valeur);

           sql = "INSERT INTO "
                             +nomTable 
                             + champ.substring(0,champ.length()-1)
                             + " VALUES " 
                             + "('"+valeur+"')";
          System.out.println(sql);
//          try{
//              jProgressBar.setMinimum(1);
//              jProgressBar.setMaximum(row);
//              
//                for(int i = 1; i<row; i++){   
//                     jProgressBar.setValue(i);
//                     connect.execute(sql);
//                    jLabelNbrLigne.setText(i+" Nombre de ligne");          
//                }
//                jProgressBar.setValue(row);
//             }catch(Exception e){
//                System.out.println("insert_SuplementTime_() "+e.toString());
//             }
    }   

 
    public String getSalaireDeBase(String nom){
        String res=null;
              try
            {
                Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection cnx = DriverManager.getConnection("jdbc:odbc:staffAccord;integratedSecurity=true;");
            Statement stm=cnx.createStatement();
                ResultSet resultset = stm.executeQuery("SELECT [DisplayName] "
                                                    + ",[MonthlyWage] "
                                                    + ",[MonthlyHours]  "
                                                    + " FROM [dbo].[Employee] WHERE [BirthName] like '%"+nom+"%'");
                
                while(resultset.next()){
                    res = String.valueOf(Double.parseDouble(resultset.getString("MonthlyWage")));
                } 

            }catch(Exception e)
            {
                
                 System.out.println("getSalaireDeBase(String nom) "+e.getMessage());
            }      
          return(res);
    }
      
    public String getEmployer(String nom){
        String res=null;
              try
            {
                Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            Connection cnx = DriverManager.getConnection("jdbc:odbc:staffAccord;integratedSecurity=true;");
            Statement stm=cnx.createStatement();
                ResultSet resultset = stm.executeQuery("SELECT [RegistrationNumber] " +
                                                        " ,[Nationality] " +
                                                        " ,[Address_Address1] " +
                                                        " ,[MonthlyWage] "
                                                    + " FROM [dbo].[Employee] WHERE [BirthName] like '%"+nom+"%'");
                
                while(resultset.next()){
                    res = String.valueOf(Double.parseDouble(resultset.getString("MonthlyWage")));
                } 

            }catch(Exception e)
            {
                
                 System.out.println("getSalaireDeBase(String nom) "+e.getMessage());
            }      
          return(res);
    }
    
    public void liste_Employer(){
        
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame_Import.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame_Import.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame_Import.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_Import.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame_Import().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSuivant;
    private javax.swing.JButton jButton_Import;
    private javax.swing.JButton jButton_Import1;
    private javax.swing.JLabel jLabelAg;
    private javax.swing.JLabel jLabelExit;
    private javax.swing.JLabel jLabelIcon;
    private javax.swing.JLabel jLabelNbrLigne;
    private javax.swing.JLabel jLabelSkin;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollPane jScrollPaneE;
    private javax.swing.JTable jTableExcel;
    // End of variables declaration//GEN-END:variables
}
